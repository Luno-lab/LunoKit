// .papi/descriptors/src/ksm_metadata.ts
var binMeta = "";
var ksm_metadata_default = binMeta;
export {
  ksm_metadata_default as default
};
